geom_point(size=4) +
theme_bw()
seurat.data=PCA(seurat.data, pc.genes=genes.sig)
rot = seurat.data@pca.rot %>%
tibble::rownames_to_column(var="sample")  %>%
left_join(welldata, by="sample")
ggplot(rot, aes(PC1, PC2, label=treatment, color=batch)) +
geom_text(size=2) +
theme_bw()
install.packages("cowplot")
ggplot(rot, aes(PC1, PC2, color=classes, label=treatment)) +
geom_point(size=1) +
geom_text(size=3) +
theme_bw()
ggplot(rot, aes(PC2, PC3, color=classes, label=treatment)) +
geom_point(size=1) +
geom_text(size=3) +
theme_bw()
ggplot(rot, aes(PC1, PC3, color=classes, label=treatment)) +
geom_point(size=1) +
geom_text(size=3) +
theme_bw()
ggplot(rot, aes(PC1, PC4, color=classes, label=treatment)) +
geom_point(size=1) +
geom_text(size=3) +
theme_bw()
ggplot(rot, aes(PC1, PC2, color=classes, label=treatment)) +
geom_point(size=1) +
geom_text(size=3) +
theme_bw()
library(useful)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(cowplot)
setwd("~/rubin-cell-fate-conversion")
# Creating a function to organize the data
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
save(plates, file="plates.RData")
load("plates.RData")
welldata_fn = "metadata/Compound Layout 384w1B.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
plates = plates[, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383)]
welldata = welldata[c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383),]
welldata$genes_detected = colSums(plates > 0)
welldata$genes_detected_zscore = ave(welldata$genes_detected, FUN=scale)
welldata$genes_detected_pval = 2 * pnorm(-abs(welldata$genes_detected_zscore))
welldata$genes_detected_padj = p.adjust(welldata$genes_detected_pval, method="BH")
outliers = subset(welldata, genes_detected_padj < 0.1)
welldata$counts = colSums(plates)
welldata$means = colMeans(plates)
ggplot(welldata, aes(batch, counts)) + geom_boxplot() +
ylab("total counts") +
xlab("") +
theme_bw()
welldata$failed = colSums(plates) < 10000
welldata %>% group_by(batch) %>% summarise(nfailed = sum(failed))
welldata = subset(welldata, genes_detected > 3500)
plates = plates[, rownames(welldata)]
library(biomaRt)
mouse = useMart(biomart = "ENSEMBL_MART_ENSEMBL",
dataset="mmusculus_gene_ensembl",
host = "jul2015.archive.ensembl.org")
conversions = getBM(attributes=c("ensembl_gene_id", "mgi_symbol", "gene_biotype"),
mart=mouse)
biotypes = unique(conversions$gene_biotype)
noise_rna_biotypes = c("Mt_tRNA", "Mt_rRNA", "snoRNA", "snRNA", "misc_RNA",
"scaRNA", "rRNA", "sRNA")
noise_rna_genes = subset(conversions, gene_biotype %in% noise_rna_biotypes)$mgi_symbol
noise_rna = rownames(plates)[rownames(plates) %in% noise_rna_genes]
welldata$noise_counts = colSums(plates[noise_rna,])
ggplot(welldata, aes(batch, noise_counts)) + geom_boxplot() +
ylab("counts in noise genes") +
xlab("") +
theme_bw()
plates = plates[!rownames(plates) %in% noise_rna_genes,]
plates = plates[rowSums(plates > 0) > 4 & rowSums(plates) > 10,]
seurat.raw.data = data.frame(log(plates + 1))
seurat.data = new('seurat', raw.data=seurat.raw.data)
seurat.data = Setup(seurat.data, project="rubin", min.cells=1, min.genes=1000,
is.expr=1, meta.data=welldata)
seurat.data = MeanVarPlot(seurat.data, fxn.x = expMean, fxn.y = logVarDivMean, y.cutoff = 1, x.low.cutoff = 1)
seurat.data = PCA(seurat.data, do.print=TRUE)
rot = seurat.data@pca.rot %>%
tibble::rownames_to_column(var="sample")  %>%
left_join(welldata, by="sample")
ggplot(rot, aes(PC2, PC3, label=treatment, color=batch)) +
geom_point(size=4, show.legend=FALSE) +
geom_point() +geom_text(aes(label=treatment),hjust=0, vjust=0) +
theme_bw()
write.table(rownames(plates), file="expressed.txt", quote=FALSE, row.names=FALSE, col.names=FALSE)
simpledata = subset(welldata, treatment %in% c("DMSO", "AdMyoD"))
simpledata$sample = rownames(simpledata)
simple = plates[, rownames(simpledata)]
simple.raw.data = data.frame(log(simple + 1))
simple.data = new('seurat', raw.data=simple.raw.data)
simple.data = Setup(simple.data, project="rubin", min.cells=1, min.genes=1000,
is.expr=1, meta.data=simpledata)
simple.data = MeanVarPlot(simple.data, y.cutoff = 1, x.low.cutoff = 1,
fxn.x = expMean,fxn.y = logVarDivMean)
simple.data = PCA(simple.data, do.print=FALSE)
rot = simple.data@pca.rot %>%
tibble::rownames_to_column(var = "sample") %>%
left_join(simpledata, by="sample")
ggplot(rot, aes(PC1, PC2, shape=treatment, color=batch)) +
geom_point(size=4) +
theme_bw()
seurat.data = PCA(seurat.data, pc.genes=rownames(components))
welldata$classes = ifelse(welldata$treatment == "DMSO", "DMSO",
ifelse(welldata$treatment == "AdMyoD", "AdMyoD", "other"))
rot = seurat.data@pca.rot %>%
tibble::rownames_to_column(var="sample")  %>%
left_join(welldata, by="sample")
ggplot(rot, aes(PC1, PC2, color=classes, label=treatment)) +
geom_point(size=1) +
geom_text(size=3) +
theme_bw()
seurat.data = PCA(seurat.data, pc.genes=rownames(components))
welldata$classes = ifelse(welldata$treatment == "DMSO", "DMSO",
ifelse(welldata$treatment == "AdMyoD", "AdMyoD", "other"))
rot = seurat.data@pca.rot %>%
tibble::rownames_to_column(var="sample")  %>%
left_join(welldata, by="sample")
ggplot(rot, aes(PC1, PC2, color=classes, label=treatment)) +
geom_point(size=1) +
geom_text(size=3) +
theme_bw()
seurat.data = PCA(seurat.data, pc.genes=rownames(components))
View(simpledata)
write.table(head(rownames(components)[order(-abs(components$PC1))], 50),
file="pc1 all post simplified.txt", quote=FALSE, row.names=FALSE, col.names=FALSE)
ggplot(rot, aes(PC1, PC2, shape=treatment, color=batch)) +
geom_point(size=4) +
theme_bw()
simpledata = subset(welldata, treatment %in% c("DMSO", "AdMyoD"))
simpledata$sample = rownames(simpledata)
simple = plates[, rownames(simpledata)]
simple.raw.data = data.frame(log(simple + 1))
simple.data = new('seurat', raw.data=simple.raw.data)
simple.data = Setup(simple.data, project="rubin", min.cells=1, min.genes=1000,
is.expr=1, meta.data=simpledata)
simple.data = MeanVarPlot(simple.data, y.cutoff = 1, x.low.cutoff = 1,
fxn.x = expMean,fxn.y = logVarDivMean)
simple.data = PCA(simple.data, do.print=FALSE)
rot = simple.data@pca.rot %>%
tibble::rownames_to_column(var = "sample") %>%
left_join(simpledata, by="sample")
ggplot(rot, aes(PC1, PC2, shape=treatment, color=batch)) +
geom_point(size=4) +
theme_bw()
components = simple.data@pca.x
components = components[order(-abs(components$PC1)),]
write.table(head(rownames(components), 100), file="AdMyoD-vs-dmso-pc1.txt", quote=FALSE,
row.names=FALSE, col.names=FALSE)
View(plates)
load("plates.RData")
welldata_fn = "metadata/Compound Layout 384w1B.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
positive_fn = "data/Feo_positive_controls.unq.refseq.umi.SC_and_Myoblast_Raw.txt"
positive = read.table(positive_fn, header=TRUE, row.names=rownames(plates))
positive$id = NULL
positive_samples = data.frame(str_split_fixed(colnames(positive), "_", 3))
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))$X1
positive_welldata = data.frame(batch=positive_samples$X1,
treatment=positive_samples$X1,
well=positive_samples$X1)
View(positive_samples)
View(positive_welldata)
View(positive_samples)
View(positive)
Merged_data = merge(plates, positive, by = 0, all = TRUE)
View(Merged_data)
Merged_data = merge(plates, positive, by = Row.names, all = TRUE)
View(Merged_data)
write.csv(Merged_data, "~/rubin-cell-fate-conversion/Merged_data.csv")
Merged_welldata - rbind(plates, positive)
Merged_welldata = rbind(welldata, positive_welldata)
library(useful)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(cowplot)
setwd("~/rubin-cell-fate-conversion")
# Creating a function to organize the data
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
save(plates, file="plates.RData")
load("plates.RData")
welldata_fn = "metadata/Compound Layout 384w1B.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
plates = plates[, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383)]
welldata = welldata[c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383),]
positive_fn = "data/Feo_positive_controls.unq.refseq.umi.SC_and_Myoblast_Raw.txt"
positive = read.table(positive_fn, header=TRUE, row.names=rownames(plates))
positive$id = NULL
positive_samples = data.frame(str_split_fixed(colnames(positive), "_", 3))
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))$X1
positive_welldata = data.frame(batch=positive_samples$X1,
treatment=positive_samples$X1,
well=positive_samples$X1)
View(plates)
View(positive)
View(positive_welldata)
View(welldata)
poswelldata_fn = "metadata/List of all samples.csv"
poswelldata = read_csv(poswelldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
pos_identities = data.frame(str_split_fixed(colnames(positive), "_", 3))
colnames(pos_identities) = c("batch", "drop", "well")
pos_identities$id = colnames(positive)
poswelldata = pos_identities %>% dplyr::select(batch, well) %>%
left_join(poswelldata, by="well")
rownames(poswelldata) = colnames(positive)
poswelldata$sample = colnames(positive)
View(poswelldata)
treatment(poswelldata) = batch(poswelldata)
poswelldata$treatment = poswelldata$batch
View(poswelldata)
library(useful)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(cowplot)
positive_fn = "data/Feo_positive_controls.unq.refseq.umi.SC_and_Myoblast_Raw.txt"
positive = read.table(positive_fn, header=TRUE, row.names=rownames(plates))
positive$id = NULL
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
positive_fn = "data/Feo_positive_controls.unq.refseq.umi.SC_and_Myoblast_Raw.txt"
positive = read.table(positive_fn, header=TRUE, row.names=rownames(plates))
positive$id = NULL
View(positive)
View(plates)
write.table(positive, file="SCMYO.dat", row.names=FALSE, sep="\t", quote=FALSE)
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
write.table(positive, file="SCMYO.dat", row.names=TRUE, sep="\t", quote=FALSE)
write.table(positive, file="SCMYO.dat", row.names=TRUE, sep="\t", quote=FALSE)
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
View(plates)
welldata_fn = "metadata/Compound Layout 384w1B.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
View(welldata)
View(positive)
welldata_fn = "metadata/Compound Layout 384w1BwP.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
View(welldata)
welldata_fn = "metadata/Compound Layout 384w1BwP.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
View(welldata)
positive_fn = "data/Feo_positive_controls.unq.refseq.umi.SC_and_Myoblast_Raw_v2.txt"
positive = read.table(positive_fn, header=TRUE, row.names=rownames(plates))
positive$id = NULL
write.table(positive, file="SCMYO.dat", row.names=TRUE, sep="\t", quote=FALSE)
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
welldata_fn = "metadata/Compound Layout 384w1BwP.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
View(plates)
View(welldata)
write.table(positive, file="SCMYO.dat", row.names=FALSE, sep="\t", quote=FALSE)
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
welldata_fn = "metadata/List of all samples.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
View(welldata)
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
View(welldata)
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
welldata_fn = "metadata/List of all samples.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
View(welldata)
final = plates[complete.cases(plates),]
final = na.omit(welldata)
View(welldata)
final = subset(welldata, treatment=!NA)
View(final)
final = subset(welldata, treatment=!0)
final = dplyr::select(welldata, treatment)
View(final)
final = dplyr::filter(welldata, treatment=!is.na)
final = dplyr::filter(welldata, treatment==!is.na)
final = dplyr::filter(welldata, treatment == !is.na)
final = dplyr::filter(welldata, treatment >0)
View(final)
plates = plates[, rownames(welldata)]
welldata = dplyr::filter(welldata, treatment >0)
plates = plates[, rownames(welldata)]
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
welldata_fn = "metadata/List of all samples.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
welldata = dplyr::filter(welldata, treatment >0)
plates = plates[, rownames(welldata)]
View(plates)
plates = plates[, ,rownames(welldata)]
plates = plates[,rownames(welldata)]
welldata = dplyr::filter(welldata, treatment >0)
plates = plates[, rownames(welldata)]
plates = plates(, rownames(welldata))
View(welldata)
View(welldata)
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
View(plates)
plate_reader = function(fn) {
batch = strsplit(basename(fn), ".", fixed=TRUE)[[1]][1]
data = read.table(fn, header=TRUE, row.names=1)
colnames(data) = paste(batch, colnames(data), sep="_")
data
}
plates_fns = sort(list.files("data", pattern="\\.dat", full.names=TRUE))
plates = do.call(cbind, lapply(plates_fns, plate_reader))
welldata_fn = "metadata/Compound Layout 384w1B.csv"
welldata = read_csv(welldata_fn) %>%
gather(column, treatment, -row) %>%
mutate(well=paste(row, column, sep="")) %>%
dplyr::select(well, treatment)
identities = data.frame(str_split_fixed(colnames(plates), "_", 3))
colnames(identities) = c("batch", "drop", "well")
identities$id = colnames(plates)
welldata = identities %>% dplyr::select(batch, well) %>%
left_join(welldata, by="well")
rownames(welldata) = colnames(plates)
welldata$sample = colnames(plates)
View(welldata)
